"""
Django settings for BookList project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-l0(leg^!3_f-phso9o#pyy-4e2j%8u#=!08bd2z1zzomupp4aq"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "BookListAPI",
    "routApp",
    "MenuAPI",
    "rest_framework",   #including DRF
    "debug_toolbar",  # Django debug toolbar
    "rest_framework.authtoken",  # Token-based authentication in DRF
    "djoser"  ,             # for better authentication
    # "rest_framework_simplejwt",      #json web token
    # "rest_framework_simplejwt.token_blacklist", #to blacklist jwt refresh token
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware"           #debug-toolbar middleware
]

ROOT_URLCONF = "BookList.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR/"MenuAPI/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "BookList.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

INTERNAL_IPS=[
    '127.0.0.1'         #for debugtoolbar
]



REST_FRAMEWORK={  
    "DEFAULT_RENDERER_CLASSES":[        #to include other rendering formats
       'rest_framework.renderers.JSONRenderer',  #default
        'rest_framework.renderers.BrowsableAPIRenderer', #default
        'rest_framework_xml.renderers.XMLRenderer',   #need to install
        "rest_framework_yaml.renderers.YAMLRenderer"
        
    ],
    'DEFAULT_FILTER_BACKENDS': [  # pip install django-filter   DRF classes for filtering

    'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',  
        'rest_framework.filters.SearchFilter',
    ],
    # DRFâ€™s built-in pagination classes
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE":4,
    
    "DEFAULT_AUTHENTICATION_CLASSES":[
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        #'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_THROTTLE_RATES':{
        "anon":'10/minute',
        "user":"20/minute",
        "ten":"10/minute"
    },
    "DEFAULT_THROTTLE_CLASSES":[  #for class based
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ]
        
}


DJOSER={
    "USER_ID_FIELD":"username",
    #"LOGIN_FIELD":"email"
}


#to set jwt access token expire time
SIMPLE_JWT={
    "ACCESS_TOKEN_LIFETIME":timedelta(minutes=5)
}